services:

  postgis:
    image: kartoza/postgis:16-3.4
    ports:
    - "5432"
    environment:
      POSTGRES_USER: ${QGISFEED_DOCKER_DBUSER}
      POSTGRES_PASS: ${QGISFEED_DOCKER_DBPASSWORD}
      POSTGRES_DBNAME: ${QGISFEED_DOCKER_DBNAME}
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    restart: always
    healthcheck:
      test: "POSTGRES_PASS=$${QGISFEED_DOCKER_DBPASSWORD} pg_isready -h 127.0.0.1 -U ${QGISFEED_DOCKER_DBUSER} -d ${QGISFEED_DOCKER_DBNAME}"
    volumes:
      - ${QGISFEED_DOCKER_SHARED_VOLUME}:/var/lib/postgresql
      - ${QGISFEED_BACKUP_VOLUME}:/backups
    networks:
      internal:

  metabase:
    image: metabase/metabase:v0.49.10
    hostname: metabase-secrets
    volumes:
      - /dev/urandom:/dev/random:ro
    ports:
      - 3000:3000
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase
      MB_DB_PORT: 5432
      MB_DB_HOST: postgis
      MB_DB_USER: ${QGISFEED_DOCKER_DBUSER}
      MB_DB_PASS: ${QGISFEED_DOCKER_DBPASSWORD}
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    restart: always
    networks:
      internal:

  qgisfeed:
    # Note you cannot scale if you use container_name
    container_name: qgisfeed
    image: ${QGISFEED_DOCKER_IMAGE}
    build:
      context: .
      dockerfile: Dockerfile.production
    environment:
      QGISFEED_DOCKER_DBNAME: ${QGISFEED_DOCKER_DBNAME}
      QGISFEED_DOCKER_DBUSER: ${QGISFEED_DOCKER_DBUSER}
      QGISFEED_DOCKER_DBPASSWORD: ${QGISFEED_DOCKER_DBPASSWORD}
      QGIS_FEED_PROD_URL: ${QGIS_FEED_PROD_URL}
      DJANGO_LOCAL_SETTINGS: ${DJANGO_LOCAL_SETTINGS:-settings_local_override.py}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL:-automation}
      EMAIL_BACKEND: ${EMAIL_BACKEND}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER:-automation}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      SENTRY_DSN: ${SENTRY_DSN}
      SENTRY_RATE: ${SENTRY_RATE}
      # Social syndication
      MASTODON_ACCESS_TOKEN: ${MASTODON_ACCESS_TOKEN}
      MASTODON_API_BASE_URL: ${MASTODON_API_BASE_URL}
      BLUESKY_HANDLE: ${BLUESKY_HANDLE}
      BLUESKY_PASSWORD: ${BLUESKY_PASSWORD}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_CHAT_ID: ${TELEGRAM_CHAT_ID}
    command: /code/entrypoint_production.sh
    expose:
    - "8000"
    volumes:
      - ${QGISFEED_DOCKER_SHARED_VOLUME}:/shared-volume
      - ../qgis-feed:/code
    depends_on:
      - postgis
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    restart: always
    networks:
      internal:

  nginx:
    image: nginx:latest
    ports:
    - "80:80"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    volumes:
      - ${QGISFEED_DOCKER_SHARED_VOLUME}:/shared-volume
      - ./config/nginx:/etc/nginx/conf.d
    restart: always
    networks:
      internal:

  dbbackups:
    image: kartoza/pg-backup:16-3.4
    environment:
      DUMPPREFIX: PG_QGIS_FEED
      POSTGRES_DATABASE: ${QGISFEED_DOCKER_DBNAME}
      POSTGRES_HOST: postgis
      POSTGRES_PASS: ${QGISFEED_DOCKER_DBPASSWORD}
      POSTGRES_PORT: '5432'
      POSTGRES_USER: ${QGISFEED_DOCKER_DBUSER}
    volumes:
    - ${QGISFEED_BACKUP_VOLUME}:/backups
    restart: on-failure
    depends_on:
      postgis:
        condition: service_healthy
    networks:
      internal:

networks:
    internal:
