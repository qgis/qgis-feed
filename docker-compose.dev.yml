services:
  postgis:
    image: kartoza/postgis:16-3.4
    platform: linux/amd64
    environment:
      POSTGRES_USER: docker
      POSTGRES_PASS: docker
      POSTGRES_DBNAME: qgisfeed
    volumes:
      - ${QGISFEED_DOCKER_SHARED_VOLUME}:/var/lib/postgresql
      - ${QGISFEED_BACKUP_VOLUME}:/backups
    # ports:
    # - "5436:5432"

  qgisfeed:
    # Note you cannot scale if you use container_name
    container_name: qgisfeed
    build:
      context: .
      dockerfile: ./Dockerfile
    platform: linux/amd64
    command: /code/entrypoint_testing.sh
    environment:
      DJANGO_SETTINGS_MODULE: qgisfeedproject.settings_dev
      QGISFEED_DOCKER_DBNAME: ${QGISFEED_DOCKER_DBNAME}
      QGISFEED_DOCKER_DBUSER: ${QGISFEED_DOCKER_DBUSER}
      QGISFEED_DOCKER_DBPASSWORD: ${QGISFEED_DOCKER_DBPASSWORD}
      QGIS_FEED_PROD_URL: ${QGIS_FEED_PROD_URL}
      DJANGO_LOCAL_SETTINGS: ${DJANGO_LOCAL_SETTINGS:-settings_local_override.py}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL:-automation}
      EMAIL_BACKEND: ${EMAIL_BACKEND}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER:-automation}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      SENTRY_DSN: ${SENTRY_DSN}
      SENTRY_RATE: ${SENTRY_RATE}
      # Social syndication
      MASTODON_ACCESS_TOKEN: ${MASTODON_ACCESS_TOKEN}
      MASTODON_API_BASE_URL: ${MASTODON_API_BASE_URL}
      BLUESKY_HANDLE: ${BLUESKY_HANDLE}
      BLUESKY_PASSWORD: ${BLUESKY_PASSWORD}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_CHAT_ID: ${TELEGRAM_CHAT_ID}
    ports:
    - "8000:8000"
    links:
      - postgis
    depends_on:
      - postgis
    volumes:
      - ../QGIS-Feed-Website:/code
      - ./REQUIREMENTS.txt:/REQUIREMENTS.txt
      - ${QGISFEED_MEDIA_VOLUME}:/shared-volume/media

  webpack:
    build:
      context: .
      dockerfile: ./Dockerfile
    platform: linux/amd64
    command: npm start
    working_dir: /code
    volumes:
      - .:/code
