# This file can be used as a template for .env
# The values in this file are also the default values.

# Host machine persistent storage directory, this path
# must be an existent directory with r/w permissions for
# the user from the Docker containers.
QGISFEED_DOCKER_SHARED_VOLUME=/shared-volume

# Backup Volume
QGISFEED_BACKUP_VOLUME=/mnt/backups/

# Media Volume (for development environment)
QGISFEED_MEDIA_VOLUME=/path/to/your/media/folder/

# Number of Gunicorn workers (usually: number of cores * 2 + 1)
QGISFEED_GUNICORN_WORKERS=4

# Database name
QGISFEED_DOCKER_DBNAME=qgisfeed
# Database user
QGISFEED_DOCKER_DBUSER=docker
# Database password
QGISFEED_DOCKER_DBPASSWORD=docker

# (Optional) Full path of the Django local settings override.
# Any values defined in this file will override values
# from the existing settings. New variables can also be
# defined. We can't use settings_local.py because it will be
# automaticaly replaced by settings_docker_production.py in
# Production.
# This variable is mainly usefull for the new infrastructure
DJANGO_LOCAL_SETTINGS='/path/to/settings_local_override.py'

# Email variables
EMAIL_BACKEND='django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST='smtp.resend.com'
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER="resend"
EMAIL_HOST_PASSWORD=""  # Your Resend API key
EMAIL_SUBJECT_PREFIX='[QGIS Feed] '
DEFAULT_FROM_EMAIL='no-reply-feed@qgis.org'

# Allowed hosts
QGIS_FEED_PROD_URL='feed.qgis.org'

# SENTRY
SENTRY_DSN=''
SENTRY_RATE=1

# QGIS Feed Docker image
QGISFEED_DOCKER_IMAGE='kartoza/qgis-feed:latest'

# Social syndication
MASTODON_ACCESS_TOKEN='your_access_token'
MASTODON_API_BASE_URL='https://mastodon.social'
BLUESKY_HANDLE='your_handle'
BLUESKY_PASSWORD='your_app_password'
TELEGRAM_BOT_TOKEN='your_bot_token'
# Telegram bot chat id
# Add the bot to the group, send a test message,
# run curl "https://api.telegram.org/botmy_bot_token/getUpdates"
# and find the chat id in the response
TELEGRAM_CHAT_ID='your_chat_id'
